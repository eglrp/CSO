#ifndef YAML_WRAPPER_H
#define YAML_WRAPPER_H

#include <string>
#include <iostream>

#include "yaml-cpp/yaml.h"

///
/// \brief The CYaml class, generated by Patrick@UD.
///

class CYaml{

public:

    /**
     * This will return the "singleton" class object
     * This allows for all classes to call on this static object
     */
    static CYaml &get() {
        static CYaml instance;
        return instance;
    }

    /**
     * This is assumed to be called once
     * It will load the config yaml file into memory
     */
    void parseParamFile(std::string path) {

        try {
            // Try to read in the param file
            config_general = YAML::LoadFile(path);
        } catch(...) {
            std::cerr << "[FATAL]: Unable to parse param file" << std::endl;
            std::cerr << "[FATAL]: Looked for file: " << path << std::endl;
            exit(EXIT_FAILURE);
        }

    }

    YAML::Node general() {
        return config_general;
    }

private:
    CYaml() { };

    CYaml(const CYaml &);

    CYaml &operator=(const CYaml &);

    YAML::Node config_general;
};
#endif
